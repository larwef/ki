// Code generated by protoc-gen-go. DO NOT EDIT.
// source: group.proto

package grpc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Group struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ConfigIds            []string `protobuf:"bytes,2,rep,name=config_ids,json=configIds,proto3" json:"config_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Group) Reset()         { *m = Group{} }
func (m *Group) String() string { return proto.CompactTextString(m) }
func (*Group) ProtoMessage()    {}
func (*Group) Descriptor() ([]byte, []int) {
	return fileDescriptor_e10f4c9b19ad8eee, []int{0}
}
func (m *Group) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Group.Unmarshal(m, b)
}
func (m *Group) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Group.Marshal(b, m, deterministic)
}
func (m *Group) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Group.Merge(m, src)
}
func (m *Group) XXX_Size() int {
	return xxx_messageInfo_Group.Size(m)
}
func (m *Group) XXX_DiscardUnknown() {
	xxx_messageInfo_Group.DiscardUnknown(m)
}

var xxx_messageInfo_Group proto.InternalMessageInfo

func (m *Group) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Group) GetConfigIds() []string {
	if m != nil {
		return m.ConfigIds
	}
	return nil
}

type StoreGroupRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StoreGroupRequest) Reset()         { *m = StoreGroupRequest{} }
func (m *StoreGroupRequest) String() string { return proto.CompactTextString(m) }
func (*StoreGroupRequest) ProtoMessage()    {}
func (*StoreGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e10f4c9b19ad8eee, []int{1}
}
func (m *StoreGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreGroupRequest.Unmarshal(m, b)
}
func (m *StoreGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreGroupRequest.Marshal(b, m, deterministic)
}
func (m *StoreGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreGroupRequest.Merge(m, src)
}
func (m *StoreGroupRequest) XXX_Size() int {
	return xxx_messageInfo_StoreGroupRequest.Size(m)
}
func (m *StoreGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StoreGroupRequest proto.InternalMessageInfo

func (m *StoreGroupRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RetrieveGroupRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RetrieveGroupRequest) Reset()         { *m = RetrieveGroupRequest{} }
func (m *RetrieveGroupRequest) String() string { return proto.CompactTextString(m) }
func (*RetrieveGroupRequest) ProtoMessage()    {}
func (*RetrieveGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e10f4c9b19ad8eee, []int{2}
}
func (m *RetrieveGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RetrieveGroupRequest.Unmarshal(m, b)
}
func (m *RetrieveGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RetrieveGroupRequest.Marshal(b, m, deterministic)
}
func (m *RetrieveGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetrieveGroupRequest.Merge(m, src)
}
func (m *RetrieveGroupRequest) XXX_Size() int {
	return xxx_messageInfo_RetrieveGroupRequest.Size(m)
}
func (m *RetrieveGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RetrieveGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RetrieveGroupRequest proto.InternalMessageInfo

func (m *RetrieveGroupRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*Group)(nil), "grpc.Group")
	proto.RegisterType((*StoreGroupRequest)(nil), "grpc.StoreGroupRequest")
	proto.RegisterType((*RetrieveGroupRequest)(nil), "grpc.RetrieveGroupRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GroupServiceClient is the client API for GroupService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GroupServiceClient interface {
	StoreGroup(ctx context.Context, in *StoreGroupRequest, opts ...grpc.CallOption) (*Group, error)
	RetrieveGroup(ctx context.Context, in *RetrieveGroupRequest, opts ...grpc.CallOption) (*Group, error)
}

type groupServiceClient struct {
	cc *grpc.ClientConn
}

func NewGroupServiceClient(cc *grpc.ClientConn) GroupServiceClient {
	return &groupServiceClient{cc}
}

func (c *groupServiceClient) StoreGroup(ctx context.Context, in *StoreGroupRequest, opts ...grpc.CallOption) (*Group, error) {
	out := new(Group)
	err := c.cc.Invoke(ctx, "/grpc.GroupService/StoreGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupServiceClient) RetrieveGroup(ctx context.Context, in *RetrieveGroupRequest, opts ...grpc.CallOption) (*Group, error) {
	out := new(Group)
	err := c.cc.Invoke(ctx, "/grpc.GroupService/RetrieveGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GroupServiceServer is the Handler API for GroupService service.
type GroupServiceServer interface {
	StoreGroup(context.Context, *StoreGroupRequest) (*Group, error)
	RetrieveGroup(context.Context, *RetrieveGroupRequest) (*Group, error)
}

func RegisterGroupServiceServer(s *grpc.Server, srv GroupServiceServer) {
	s.RegisterService(&_GroupService_serviceDesc, srv)
}

func _GroupService_StoreGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StoreGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupServiceServer).StoreGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.GroupService/StoreGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupServiceServer).StoreGroup(ctx, req.(*StoreGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GroupService_RetrieveGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupServiceServer).RetrieveGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.GroupService/RetrieveGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupServiceServer).RetrieveGroup(ctx, req.(*RetrieveGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GroupService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.GroupService",
	HandlerType: (*GroupServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StoreGroup",
			Handler:    _GroupService_StoreGroup_Handler,
		},
		{
			MethodName: "RetrieveGroup",
			Handler:    _GroupService_RetrieveGroup_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "group.proto",
}

func init() { proto.RegisterFile("group.proto", fileDescriptor_e10f4c9b19ad8eee) }

var fileDescriptor_e10f4c9b19ad8eee = []byte{
	// 179 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4e, 0x2f, 0xca, 0x2f,
	0x2d, 0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x49, 0x2f, 0x2a, 0x48, 0x56, 0x32, 0xe3,
	0x62, 0x75, 0x07, 0x09, 0x0a, 0xf1, 0x71, 0x31, 0x65, 0xa6, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x70,
	0x06, 0x31, 0x65, 0xa6, 0x08, 0xc9, 0x72, 0x71, 0x25, 0xe7, 0xe7, 0xa5, 0x65, 0xa6, 0xc7, 0x67,
	0xa6, 0x14, 0x4b, 0x30, 0x29, 0x30, 0x6b, 0x70, 0x06, 0x71, 0x42, 0x44, 0x3c, 0x53, 0x8a, 0x95,
	0x94, 0xb9, 0x04, 0x83, 0x4b, 0xf2, 0x8b, 0x52, 0xc1, 0x9a, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b,
	0x4b, 0xd0, 0xcd, 0x50, 0x52, 0xe3, 0x12, 0x09, 0x4a, 0x2d, 0x29, 0xca, 0x4c, 0x2d, 0xc3, 0xab,
	0xce, 0xa8, 0x86, 0x8b, 0x07, 0x2c, 0x1f, 0x9c, 0x5a, 0x54, 0x96, 0x99, 0x9c, 0x2a, 0x64, 0xc4,
	0xc5, 0x85, 0x30, 0x5c, 0x48, 0x5c, 0x0f, 0xe4, 0x52, 0x3d, 0x0c, 0xeb, 0xa4, 0xb8, 0x21, 0x12,
	0x10, 0x55, 0x16, 0x5c, 0xbc, 0x28, 0x76, 0x09, 0x49, 0x41, 0x64, 0xb1, 0x39, 0x00, 0x45, 0x67,
	0x12, 0x1b, 0x38, 0x3c, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x52, 0xf9, 0x07, 0x93, 0x1e,
	0x01, 0x00, 0x00,
}
